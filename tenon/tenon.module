<?php

// URL to Tenon.io API.
define('TENON_IO_API_URL', 'https://tenon.io/api/');

// Importance criteria.
define('TENON_IMPORTANCE_NONE', 0);
define('TENON_IMPORTANCE_LOW', 1);
define('TENON_IMPORTANCE_MEDIUM', 2);
define('TENON_IMPORTANCE_HIGH', 3);

// Headless browser default viewport dimensions.
define('TENON_VIEWPORT_DEFAULT_HEIGHT', 768);
define('TENON_VIEWPORT_DEFAULT_WIDTH', 1024);

/**
 * Implements hook_menu().
 */
function tenon_menu() {
  return array(
    'admin/config/user-interface/tenon' => array(
      'title' => 'Tenon.io settings',
      'description' => 'Administer Tenon.io API connection settings.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('tenon_admin_settings_form'),
      'access arguments' => array('administer tenon settings'),
      'file' => 'tenon.admin.inc',
    ),
    'tenon/page' => array(
      'title' => 'Page report',
      'page callback' => 'tenon_trigger_page_report',
      'access arguments' => array('tenon trigger page report'),
      'file' => 'tenon.admin.inc',
    ),
// @TODO: Enable once the endpoint is created.
    'tenon/spider' => array(
      'title' => 'Spider report',
      'page callback' => 'tenon_trigger_spider_report',
//      'access arguments' => array('tenon trigger spider report'),
      'access callback' => FALSE,
      'file' => 'tenon.admin.inc',
    ),
  );
}

/**
 * Implements hook_cp_toolbar_pre_render_alter().
 */
function tenon_cp_toolbar_pre_render_alter(&$toolbar) {
  // Build the new Tenon menu entry.
  $l_page = menu_get_item('tenon/page');
  $l_spider = menu_get_item('tenon/spider');

  // Display the toolbar menu if the user can access a page.
  if ($l_page['access'] || $l_spider['access']) {
    $toolbar['toolbar_left']['toolbar_menu']['#links']['tenon'] = array(
      'title' => t('Tenon'),
      'href' => ($l_page['access']) ? 'tenon/page' : 'tenon/spider',
      'html' => TRUE,
      '#paths' => array(),
      'attributes' => array(
        'data-tooltip' => 'Tenon.io actions.',
        'data-drawer' => 'tenon-drawer',
      ),
    );

    // Build the children links.
    $links = array();
    if ($l_page['access']) {
      $tested_url = url(current_path(), array('absolute' => TRUE));
      $l_page['query'] = array('url' => $tested_url);
      $links['tenon/page'] = $l_page;
    }
    if ($l_spider['access']) {
      $links['tenon/spider'] = $l_spider;
    }
    $toolbar['toolbar_drawer']['tenon-drawer'] = array(
      '#theme' => 'cp_toolbar_drawer_section',
      '#attributes' => array('id' => 'tenon-drawer'),
      '#paths' => array(
        'tenon',
      ),
      'manage' => array(
        '#theme' => 'links',
        '#links' => $links,
        '#attributes' => array(
          'class' => 'toolbar-gear',
        ),
      ),
    );
  }
}

/**
 * Implements hook_permission().
 */
function tenon_permission() {
  return array(
    'administer tenon settings' => array(
      'title' => 'Administer Tenon.io settings',
      'description' => 'Authorize users to configure the Tenon.io API settings.'
    ),
    'tenon trigger page report' => array(
      'title' => 'Trigger page report',
      'description' => 'Authorize the user to trigger a report from Tenon.io for the current page he browses.'
    ),
    'tenon trigger spider report' => array(
      'title' => 'Administer Tenon.io settings',
      'description' => 'Authorize the user to trigger a site spider report from Tenon.io.'
    ),
  );
}

/**
 * Implements hook_theme().
 */
function tenon_theme($existing, $type, $theme, $path) {
  return array(
    'tenon_results_report' => array(
      'variables' => array(
        'report_url' => '',
        'error_count' => 0,
        'warning_count' => 0,
        'issues_count' => 0,
        'level_a' => 0,
        'percent_a' => 0,
        'level_aa' => 0,
        'percent_aa' => 0,
        'level_aaa' => 0,
        'percent_aaa' => 0,
      ),
      'template' => 'tenon-report',
    ),
  );
}

/**
 * Implements hook_admin_menu_output_alter().
 */
function tenon_admin_menu_output_alter(&$content) {
  // Add the Tenon.io menu entry if the user can access this page report.
  $page_test = menu_get_item('tenon/page');
  if ($page_test['access']) {
    $page_url = url(current_path(), array('absolute' => TRUE));
    $content['icon']['icon']['tenon'] = array(
      '#title' => t('Tenon.io page report'),
      '#weight' => 1,
      '#access' => $page_test['access'],
      '#href' => 'tenon/page',
      '#options' => array(
        'query' => array('url' => $page_url),
      ),
    );
  }
}
